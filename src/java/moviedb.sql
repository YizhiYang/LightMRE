-- MySQL Script generated by MySQL Workbench
-- 05/02/17 16:39:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema moviedb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema moviedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `moviedb` DEFAULT CHARACTER SET utf8 ;
USE `moviedb` ;

-- -----------------------------------------------------
-- Table `moviedb`.`Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Location` (
  `ZipCode` INT(11) NOT NULL,
  `City` CHAR(20) NOT NULL,
  `State` CHAR(20) NOT NULL,
  PRIMARY KEY (`ZipCode`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Person` (
  `SSN` CHAR(11) NOT NULL,
  `LastName` CHAR(20) NOT NULL,
  `FirstName` CHAR(20) NOT NULL,
  `Address` CHAR(20) NULL,
  `ZipCode` INT(11) NULL,
  `Telephone` CHAR(12) NULL,
  PRIMARY KEY (`SSN`),
  INDEX `PersonZip_idx` (`ZipCode` ASC),
  CONSTRAINT `PersonZip`
    FOREIGN KEY (`ZipCode`)
    REFERENCES `moviedb`.`Location` (`ZipCode`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `moviedb`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Employee` (
  `Id` INT(10) NOT NULL,
  `SSN` CHAR(11) NULL,
  `StartDate` DATE NULL,
  `HourlyRate` INT(11) NULL,
  `username` CHAR(15) NOT NULL,
  `password` CHAR(15) NOT NULL,
  `isManager` TINYINT(1) NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `EmployeeSSN_idx` (`SSN` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  CONSTRAINT `EmployeeSSN`
    FOREIGN KEY (`SSN`)
    REFERENCES `moviedb`.`Person` (`SSN`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Customer` (
  `Id` CHAR(11) NOT NULL,
  `Email` CHAR(32) NULL,
  `Rating` INT(11) NULL,
  `CreditCardNumber` CHAR(19) NULL,
  PRIMARY KEY (`Id`),
  CONSTRAINT `CustomerSSN`
    FOREIGN KEY (`Id`)
    REFERENCES `moviedb`.`Person` (`SSN`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Account` (
  `Id` INT(11) NOT NULL,
  `DateOpened` DATE NULL,
  `Type` CHAR(20) NULL,
  `Customer` CHAR(11) NULL,
  `username` CHAR(15) NOT NULL,
  `password` CHAR(15) NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `AccountCustomer_idx` (`Customer` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  CONSTRAINT `AccountCustomer`
    FOREIGN KEY (`Customer`)
    REFERENCES `moviedb`.`Customer` (`Id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Order` (
  `Id` INT(11) NOT NULL,
  `DateTime` DATETIME NULL,
  `ReturnDate` DATE NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Movie` (
  `Id` CHAR(20) NOT NULL,
  `Name` CHAR(20) NOT NULL,
  `Type` CHAR(20) NOT NULL,
  `Rating` INT(11) NULL,
  `DistrFee` DECIMAL(10,2) NULL,
  `NumCopies` INT(11) NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Actor` (
  `Id` INT(11) NOT NULL,
  `Name` CHAR(20) NOT NULL,
  `Age` INT(11) NOT NULL,
  `M/F` CHAR(1) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Rental`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Rental` (
  `AccountId` INT(11) NOT NULL,
  `CustRepId` INT(10) NOT NULL,
  `OrderId` INT(11) NOT NULL,
  `MovieId` CHAR(20) NOT NULL,
  PRIMARY KEY (`AccountId`, `CustRepId`, `OrderId`, `MovieId`),
  INDEX `RentalCust_idx` (`CustRepId` ASC),
  INDEX `RentalOrder_idx` (`OrderId` ASC),
  INDEX `RentalMovie_idx` (`MovieId` ASC),
  CONSTRAINT `RentalAccount`
    FOREIGN KEY (`AccountId`)
    REFERENCES `moviedb`.`Account` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `RentalCust`
    FOREIGN KEY (`CustRepId`)
    REFERENCES `moviedb`.`Employee` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `RentalOrder`
    FOREIGN KEY (`OrderId`)
    REFERENCES `moviedb`.`Order` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `RentalMovie`
    FOREIGN KEY (`MovieId`)
    REFERENCES `moviedb`.`Movie` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`MovieQ`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`MovieQ` (
  `AccountId` INT(11) NOT NULL,
  `MovieId` CHAR(20) NOT NULL,
  PRIMARY KEY (`AccountId`, `MovieId`),
  INDEX `MovieQMovie_idx` (`MovieId` ASC),
  CONSTRAINT `MovieQAccount`
    FOREIGN KEY (`AccountId`)
    REFERENCES `moviedb`.`Account` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `MovieQMovie`
    FOREIGN KEY (`MovieId`)
    REFERENCES `moviedb`.`Movie` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`AppearedIn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`AppearedIn` (
  `ActorId` INT(11) NOT NULL,
  `MovieId` CHAR(20) NOT NULL,
  `Rating` INT(11) NULL,
  PRIMARY KEY (`ActorId`, `MovieId`),
  INDEX `AppearedInMovie_idx` (`MovieId` ASC),
  CONSTRAINT `AppearedInActor`
    FOREIGN KEY (`ActorId`)
    REFERENCES `moviedb`.`Actor` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `AppearedInMovie`
    FOREIGN KEY (`MovieId`)
    REFERENCES `moviedb`.`Movie` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviedb`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviedb`.`Rating` (
  `MovieId` CHAR(20) NOT NULL,
  `CustomerId` INT(11) NOT NULL,
  `Rating` INT(11) NOT NULL,
  PRIMARY KEY (`MovieId`, `CustomerId`),
  INDEX `RateCustomerId_idx` (`CustomerId` ASC),
  CONSTRAINT `RateCustomerId`
    FOREIGN KEY (`CustomerId`)
    REFERENCES `moviedb`.`Account` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `RateMovieId`
    FOREIGN KEY (`MovieId`)
    REFERENCES `moviedb`.`Movie` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `moviedb`.`Location`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Location` (`ZipCode`, `City`, `State`) VALUES (11790, 'Stony Brook', 'NY');
INSERT INTO `moviedb`.`Location` (`ZipCode`, `City`, `State`) VALUES (11794, 'Stony Brook', 'NY');
INSERT INTO `moviedb`.`Location` (`ZipCode`, `City`, `State`) VALUES (93536, 'Los Angeles', 'CA');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Person`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('111-11-1111', 'Yang', 'Shang', '123 Success Street', 11790, '516-632-8959');
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('222-22-2222', 'Du', 'Victor', '456 Fortune Road', 11790, '516-632-4360');
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('333-33-3333', 'Smith', 'John', '789 Peace Blvd', 93536, '315-443-4321');
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('444-44-4444', 'Philip', 'Lewis', '135 Knowledge Lane', 11794, '516-666-8888');
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('123-45-6789', 'Smith', 'David', '123 College Road', 11790, '516-216-2345');
INSERT INTO `moviedb`.`Person` (`SSN`, `LastName`, `FirstName`, `Address`, `ZipCode`, `Telephone`) VALUES ('789-12-3456', 'Warren', 'David', '456 Sunken Street', 11794, '631-632-9987');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Employee` (`Id`, `SSN`, `StartDate`, `HourlyRate`, `username`, `password`, `isManager`) VALUES (1, '123-45-6789', '2005-11-01', 60, 'employee', 'employee', false);
INSERT INTO `moviedb`.`Employee` (`Id`, `SSN`, `StartDate`, `HourlyRate`, `username`, `password`, `isManager`) VALUES (2, '789-12-3456', '2006-02-02', 50, 'manager', 'manager', true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Customer` (`Id`, `Email`, `Rating`, `CreditCardNumber`) VALUES ('111-11-1111', 'syang@cs.sunysb.edu', 1, '1234-5678-1234-5678');
INSERT INTO `moviedb`.`Customer` (`Id`, `Email`, `Rating`, `CreditCardNumber`) VALUES ('222-22-2222', 'vicdu@cs.sunysb.edu', 1, '5678-1234-5678-1234');
INSERT INTO `moviedb`.`Customer` (`Id`, `Email`, `Rating`, `CreditCardNumber`) VALUES ('333-33-3333', 'jsmith@ic.sunysb.edu', 1, '2345-6789-2345-6789');
INSERT INTO `moviedb`.`Customer` (`Id`, `Email`, `Rating`, `CreditCardNumber`) VALUES ('444-44-4444', 'pml@cs.sunysb.edu', 1, '6789-2345-6789-2345');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Account`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Account` (`Id`, `DateOpened`, `Type`, `Customer`, `username`, `password`) VALUES (1, '2006-10-01', 'unlimited-2', '444-44-4444', 'customer1', 'customer');
INSERT INTO `moviedb`.`Account` (`Id`, `DateOpened`, `Type`, `Customer`, `username`, `password`) VALUES (2, '2006-10-15', 'limited', '222-22-2222', 'customer2', 'customer');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Order`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Order` (`Id`, `DateTime`, `ReturnDate`) VALUES (1, '2009-11-11 10:00', '2009-11-14');
INSERT INTO `moviedb`.`Order` (`Id`, `DateTime`, `ReturnDate`) VALUES (2, '2009-11-11 18:15', NULL);
INSERT INTO `moviedb`.`Order` (`Id`, `DateTime`, `ReturnDate`) VALUES (3, '2009-11-12 9:30', NULL);
INSERT INTO `moviedb`.`Order` (`Id`, `DateTime`, `ReturnDate`) VALUES (4, '2009-11-21 22:22', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Movie`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Movie` (`Id`, `Name`, `Type`, `Rating`, `DistrFee`, `NumCopies`) VALUES ('1', 'The Godfather', 'Drama', 5, 10000, 3);
INSERT INTO `moviedb`.`Movie` (`Id`, `Name`, `Type`, `Rating`, `DistrFee`, `NumCopies`) VALUES ('2', 'Shawshank Redemption', 'Drama', 4, 1000, 2);
INSERT INTO `moviedb`.`Movie` (`Id`, `Name`, `Type`, `Rating`, `DistrFee`, `NumCopies`) VALUES ('3', 'Borat', 'Comedy', 3, 500, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Actor`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Actor` (`Id`, `Name`, `Age`, `M/F`) VALUES (1, 'Al Pacino', 63, 'M');
INSERT INTO `moviedb`.`Actor` (`Id`, `Name`, `Age`, `M/F`) VALUES (2, 'Tim Robbins', 53, 'M');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Rental`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Rental` (`AccountId`, `CustRepId`, `OrderId`, `MovieId`) VALUES (1, 1, 1, '1');
INSERT INTO `moviedb`.`Rental` (`AccountId`, `CustRepId`, `OrderId`, `MovieId`) VALUES (2, 1, 2, '3');
INSERT INTO `moviedb`.`Rental` (`AccountId`, `CustRepId`, `OrderId`, `MovieId`) VALUES (1, 2, 3, '3');
INSERT INTO `moviedb`.`Rental` (`AccountId`, `CustRepId`, `OrderId`, `MovieId`) VALUES (2, 2, 4, '2');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`MovieQ`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`MovieQ` (`AccountId`, `MovieId`) VALUES (1, '1');
INSERT INTO `moviedb`.`MovieQ` (`AccountId`, `MovieId`) VALUES (1, '3');
INSERT INTO `moviedb`.`MovieQ` (`AccountId`, `MovieId`) VALUES (2, '2');
INSERT INTO `moviedb`.`MovieQ` (`AccountId`, `MovieId`) VALUES (2, '3');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`AppearedIn`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`AppearedIn` (`ActorId`, `MovieId`, `Rating`) VALUES (1, '1', 5);
INSERT INTO `moviedb`.`AppearedIn` (`ActorId`, `MovieId`, `Rating`) VALUES (1, '3', 5);
INSERT INTO `moviedb`.`AppearedIn` (`ActorId`, `MovieId`, `Rating`) VALUES (2, '1', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviedb`.`Rating`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviedb`;
INSERT INTO `moviedb`.`Rating` (`MovieId`, `CustomerId`, `Rating`) VALUES ('1', 2, 4);

COMMIT;

